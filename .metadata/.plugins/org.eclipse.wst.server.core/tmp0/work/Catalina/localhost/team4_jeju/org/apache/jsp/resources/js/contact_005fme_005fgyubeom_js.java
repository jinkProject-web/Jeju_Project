/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.20
 * Generated at: 2019-07-15 07:27:23 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.resources.js;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class contact_005fme_005fgyubeom_js extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("$(function() {\n");
      out.write("\n");
      out.write("  $(\"#contactForm input,#contactForm textarea\").jqBootstrapValidation({\n");
      out.write("    preventSubmit: true,\n");
      out.write("    submitError: function($form, event, errors) {\n");
      out.write("      // additional error messages or events\n");
      out.write("    },\n");
      out.write("    submitSuccess: function($form, event) {\n");
      out.write("      event.preventDefault(); // prevent default submit behaviour\n");
      out.write("      // get values from FORM\n");
      out.write("      var name = $(\"input#name\").val();\n");
      out.write("      var email = $(\"input#email\").val();\n");
      out.write("      var phone = $(\"input#phone\").val();\n");
      out.write("      var message = $(\"textarea#message\").val();\n");
      out.write("      var firstName = name; // For Success/Failure Message\n");
      out.write("      // Check for white space in name for Success/Fail message\n");
      out.write("      if (firstName.indexOf(' ') >= 0) {\n");
      out.write("        firstName = name.split(' ').slice(0, -1).join(' ');\n");
      out.write("      }\n");
      out.write("      $this = $(\"#sendMessageButton\");\n");
      out.write("      $this.prop(\"disabled\", true); // Disable submit button until AJAX call is complete to prevent duplicate messages\n");
      out.write("      $.ajax({\n");
      out.write("        url: \"././mail/contact_me.php\",\n");
      out.write("        type: \"POST\",\n");
      out.write("        data: {\n");
      out.write("          name: name,\n");
      out.write("          phone: phone,\n");
      out.write("          email: email,\n");
      out.write("          message: message\n");
      out.write("        },\n");
      out.write("        cache: false,\n");
      out.write("        success: function() {\n");
      out.write("          // Success message\n");
      out.write("          $('#success').html(\"<div class='alert alert-success'>\");\n");
      out.write("          $('#success > .alert-success').html(\"<button type='button' class='close' data-dismiss='alert' aria-hidden='true'>&times;\")\n");
      out.write("            .append(\"</button>\");\n");
      out.write("          $('#success > .alert-success')\n");
      out.write("            .append(\"<strong>Your message has been sent. </strong>\");\n");
      out.write("          $('#success > .alert-success')\n");
      out.write("            .append('</div>');\n");
      out.write("          //clear all fields\n");
      out.write("          $('#contactForm').trigger(\"reset\");\n");
      out.write("        },\n");
      out.write("        error: function() {\n");
      out.write("          // Fail message\n");
      out.write("          $('#success').html(\"<div class='alert alert-danger'>\");\n");
      out.write("          $('#success > .alert-danger').html(\"<button type='button' class='close' data-dismiss='alert' aria-hidden='true'>&times;\")\n");
      out.write("            .append(\"</button>\");\n");
      out.write("          $('#success > .alert-danger').append($(\"<strong>\").text(\"Sorry \" + firstName + \", it seems that my mail server is not responding. Please try again later!\"));\n");
      out.write("          $('#success > .alert-danger').append('</div>');\n");
      out.write("          //clear all fields\n");
      out.write("          $('#contactForm').trigger(\"reset\");\n");
      out.write("        },\n");
      out.write("        complete: function() {\n");
      out.write("          setTimeout(function() {\n");
      out.write("            $this.prop(\"disabled\", false); // Re-enable submit button when AJAX call is complete\n");
      out.write("          }, 1000);\n");
      out.write("        }\n");
      out.write("      });\n");
      out.write("    },\n");
      out.write("    filter: function() {\n");
      out.write("      return $(this).is(\":visible\");\n");
      out.write("    },\n");
      out.write("  });\n");
      out.write("\n");
      out.write("  $(\"a[data-toggle=\\\"tab\\\"]\").click(function(e) {\n");
      out.write("    e.preventDefault();\n");
      out.write("    $(this).tab(\"show\");\n");
      out.write("  });\n");
      out.write("});\n");
      out.write("\n");
      out.write("/*When clicking on Full hide fail/success boxes */\n");
      out.write("$('#name').focus(function() {\n");
      out.write("  $('#success').html('');\n");
      out.write("});\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
