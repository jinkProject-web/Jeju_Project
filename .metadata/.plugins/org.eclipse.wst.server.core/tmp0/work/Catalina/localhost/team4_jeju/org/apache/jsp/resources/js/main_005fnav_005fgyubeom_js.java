/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.20
 * Generated at: 2019-07-15 07:27:23 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.resources.js;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class main_005fnav_005fgyubeom_js extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("(function($) {\n");
      out.write("  \"use strict\"; // Start of use strict\n");
      out.write("\n");
      out.write("  // Smooth scrolling using jQuery easing\n");
      out.write("  $('a.js-scroll-trigger[href*=\"#\"]:not([href=\"#\"])').click(function() {\n");
      out.write("    if (location.pathname.replace(/^\\//, '') == this.pathname.replace(/^\\//, '') && location.hostname == this.hostname) {\n");
      out.write("      var target = $(this.hash);\n");
      out.write("      target = target.length ? target : $('[name=' + this.hash.slice(1) + ']');\n");
      out.write("      if (target.length) {\n");
      out.write("        $('html, body').animate({\n");
      out.write("          scrollTop: (target.offset().top - 71)\n");
      out.write("        }, 1000, \"easeInOutExpo\");\n");
      out.write("        return false;\n");
      out.write("      }\n");
      out.write("    }\n");
      out.write("  });\n");
      out.write("\n");
      out.write("  // Scroll to top button appear\n");
      out.write("  $(document).scroll(function() {\n");
      out.write("    var scrollDistance = $(this).scrollTop();\n");
      out.write("    if (scrollDistance > 100) {\n");
      out.write("      $('.scroll-to-top').fadeIn();\n");
      out.write("    } else {\n");
      out.write("      $('.scroll-to-top').fadeOut();\n");
      out.write("    }\n");
      out.write("  });\n");
      out.write("\n");
      out.write("  // Closes responsive menu when a scroll trigger link is clicked\n");
      out.write("  $('.js-scroll-trigger').click(function() {\n");
      out.write("    $('.navbar-collapse').collapse('hide');\n");
      out.write("  });\n");
      out.write("\n");
      out.write("  // Activate scrollspy to add active class to navbar items on scroll\n");
      out.write("  $('body').scrollspy({\n");
      out.write("    target: '#mainNav',\n");
      out.write("    offset: 80\n");
      out.write("  });\n");
      out.write("\n");
      out.write("  // Collapse Navbar\n");
      out.write("  var navbarCollapse = function() {\n");
      out.write("    if ($(\"#mainNav\").offset().top > 100) {\n");
      out.write("      $(\"#mainNav\").addClass(\"navbar-shrink\");\n");
      out.write("    } else {\n");
      out.write("      $(\"#mainNav\").removeClass(\"navbar-shrink\");\n");
      out.write("    }\n");
      out.write("  };\n");
      out.write("  // Collapse now if page is not at top\n");
      out.write("  navbarCollapse();\n");
      out.write("  // Collapse the navbar when page is scrolled\n");
      out.write("  $(window).scroll(navbarCollapse);\n");
      out.write("\n");
      out.write("  // Floating label headings for the contact form\n");
      out.write("  $(function() {\n");
      out.write("    $(\"body\").on(\"input propertychange\", \".floating-label-form-group\", function(e) {\n");
      out.write("      $(this).toggleClass(\"floating-label-form-group-with-value\", !!$(e.target).val());\n");
      out.write("    }).on(\"focus\", \".floating-label-form-group\", function() {\n");
      out.write("      $(this).addClass(\"floating-label-form-group-with-focus\");\n");
      out.write("    }).on(\"blur\", \".floating-label-form-group\", function() {\n");
      out.write("      $(this).removeClass(\"floating-label-form-group-with-focus\");\n");
      out.write("    });\n");
      out.write("  });\n");
      out.write("\n");
      out.write("})(jQuery); // End of use strict\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
