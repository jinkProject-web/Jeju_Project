/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.20
 * Generated at: 2019-07-15 07:27:21 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.resources.js;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class jquery_easing_005fgyubeom_js extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("/*\n");
      out.write(" * jQuery Easing v1.4.1 - http://gsgd.co.uk/sandbox/jquery/easing/\n");
      out.write(" * Open source under the BSD License.\n");
      out.write(" * Copyright Â© 2008 George McGinley Smith\n");
      out.write(" * All rights reserved.\n");
      out.write(" * https://raw.github.com/gdsmith/jquery-easing/master/LICENSE\n");
      out.write("*/\n");
      out.write("\n");
      out.write("(function (factory) {\n");
      out.write("\tif (typeof define === \"function\" && define.amd) {\n");
      out.write("\t\tdefine(['jquery'], function ($) {\n");
      out.write("\t\t\treturn factory($);\n");
      out.write("\t\t});\n");
      out.write("\t} else if (typeof module === \"object\" && typeof module.exports === \"object\") {\n");
      out.write("\t\texports = factory(require('jquery'));\n");
      out.write("\t} else {\n");
      out.write("\t\tfactory(jQuery);\n");
      out.write("\t}\n");
      out.write("})(function($){\n");
      out.write("\n");
      out.write("// Preserve the original jQuery \"swing\" easing as \"jswing\"\n");
      out.write("$.easing.jswing = $.easing.swing;\n");
      out.write("\n");
      out.write("var pow = Math.pow,\n");
      out.write("\tsqrt = Math.sqrt,\n");
      out.write("\tsin = Math.sin,\n");
      out.write("\tcos = Math.cos,\n");
      out.write("\tPI = Math.PI,\n");
      out.write("\tc1 = 1.70158,\n");
      out.write("\tc2 = c1 * 1.525,\n");
      out.write("\tc3 = c1 + 1,\n");
      out.write("\tc4 = ( 2 * PI ) / 3,\n");
      out.write("\tc5 = ( 2 * PI ) / 4.5;\n");
      out.write("\n");
      out.write("// x is the fraction of animation progress, in the range 0..1\n");
      out.write("function bounceOut(x) {\n");
      out.write("\tvar n1 = 7.5625,\n");
      out.write("\t\td1 = 2.75;\n");
      out.write("\tif ( x < 1/d1 ) {\n");
      out.write("\t\treturn n1*x*x;\n");
      out.write("\t} else if ( x < 2/d1 ) {\n");
      out.write("\t\treturn n1*(x-=(1.5/d1))*x + 0.75;\n");
      out.write("\t} else if ( x < 2.5/d1 ) {\n");
      out.write("\t\treturn n1*(x-=(2.25/d1))*x + 0.9375;\n");
      out.write("\t} else {\n");
      out.write("\t\treturn n1*(x-=(2.625/d1))*x + 0.984375;\n");
      out.write("\t}\n");
      out.write("}\n");
      out.write("\n");
      out.write("$.extend( $.easing,\n");
      out.write("{\n");
      out.write("\tdef: 'easeOutQuad',\n");
      out.write("\tswing: function (x) {\n");
      out.write("\t\treturn $.easing[$.easing.def](x);\n");
      out.write("\t},\n");
      out.write("\teaseInQuad: function (x) {\n");
      out.write("\t\treturn x * x;\n");
      out.write("\t},\n");
      out.write("\teaseOutQuad: function (x) {\n");
      out.write("\t\treturn 1 - ( 1 - x ) * ( 1 - x );\n");
      out.write("\t},\n");
      out.write("\teaseInOutQuad: function (x) {\n");
      out.write("\t\treturn x < 0.5 ?\n");
      out.write("\t\t\t2 * x * x :\n");
      out.write("\t\t\t1 - pow( -2 * x + 2, 2 ) / 2;\n");
      out.write("\t},\n");
      out.write("\teaseInCubic: function (x) {\n");
      out.write("\t\treturn x * x * x;\n");
      out.write("\t},\n");
      out.write("\teaseOutCubic: function (x) {\n");
      out.write("\t\treturn 1 - pow( 1 - x, 3 );\n");
      out.write("\t},\n");
      out.write("\teaseInOutCubic: function (x) {\n");
      out.write("\t\treturn x < 0.5 ?\n");
      out.write("\t\t\t4 * x * x * x :\n");
      out.write("\t\t\t1 - pow( -2 * x + 2, 3 ) / 2;\n");
      out.write("\t},\n");
      out.write("\teaseInQuart: function (x) {\n");
      out.write("\t\treturn x * x * x * x;\n");
      out.write("\t},\n");
      out.write("\teaseOutQuart: function (x) {\n");
      out.write("\t\treturn 1 - pow( 1 - x, 4 );\n");
      out.write("\t},\n");
      out.write("\teaseInOutQuart: function (x) {\n");
      out.write("\t\treturn x < 0.5 ?\n");
      out.write("\t\t\t8 * x * x * x * x :\n");
      out.write("\t\t\t1 - pow( -2 * x + 2, 4 ) / 2;\n");
      out.write("\t},\n");
      out.write("\teaseInQuint: function (x) {\n");
      out.write("\t\treturn x * x * x * x * x;\n");
      out.write("\t},\n");
      out.write("\teaseOutQuint: function (x) {\n");
      out.write("\t\treturn 1 - pow( 1 - x, 5 );\n");
      out.write("\t},\n");
      out.write("\teaseInOutQuint: function (x) {\n");
      out.write("\t\treturn x < 0.5 ?\n");
      out.write("\t\t\t16 * x * x * x * x * x :\n");
      out.write("\t\t\t1 - pow( -2 * x + 2, 5 ) / 2;\n");
      out.write("\t},\n");
      out.write("\teaseInSine: function (x) {\n");
      out.write("\t\treturn 1 - cos( x * PI/2 );\n");
      out.write("\t},\n");
      out.write("\teaseOutSine: function (x) {\n");
      out.write("\t\treturn sin( x * PI/2 );\n");
      out.write("\t},\n");
      out.write("\teaseInOutSine: function (x) {\n");
      out.write("\t\treturn -( cos( PI * x ) - 1 ) / 2;\n");
      out.write("\t},\n");
      out.write("\teaseInExpo: function (x) {\n");
      out.write("\t\treturn x === 0 ? 0 : pow( 2, 10 * x - 10 );\n");
      out.write("\t},\n");
      out.write("\teaseOutExpo: function (x) {\n");
      out.write("\t\treturn x === 1 ? 1 : 1 - pow( 2, -10 * x );\n");
      out.write("\t},\n");
      out.write("\teaseInOutExpo: function (x) {\n");
      out.write("\t\treturn x === 0 ? 0 : x === 1 ? 1 : x < 0.5 ?\n");
      out.write("\t\t\tpow( 2, 20 * x - 10 ) / 2 :\n");
      out.write("\t\t\t( 2 - pow( 2, -20 * x + 10 ) ) / 2;\n");
      out.write("\t},\n");
      out.write("\teaseInCirc: function (x) {\n");
      out.write("\t\treturn 1 - sqrt( 1 - pow( x, 2 ) );\n");
      out.write("\t},\n");
      out.write("\teaseOutCirc: function (x) {\n");
      out.write("\t\treturn sqrt( 1 - pow( x - 1, 2 ) );\n");
      out.write("\t},\n");
      out.write("\teaseInOutCirc: function (x) {\n");
      out.write("\t\treturn x < 0.5 ?\n");
      out.write("\t\t\t( 1 - sqrt( 1 - pow( 2 * x, 2 ) ) ) / 2 :\n");
      out.write("\t\t\t( sqrt( 1 - pow( -2 * x + 2, 2 ) ) + 1 ) / 2;\n");
      out.write("\t},\n");
      out.write("\teaseInElastic: function (x) {\n");
      out.write("\t\treturn x === 0 ? 0 : x === 1 ? 1 :\n");
      out.write("\t\t\t-pow( 2, 10 * x - 10 ) * sin( ( x * 10 - 10.75 ) * c4 );\n");
      out.write("\t},\n");
      out.write("\teaseOutElastic: function (x) {\n");
      out.write("\t\treturn x === 0 ? 0 : x === 1 ? 1 :\n");
      out.write("\t\t\tpow( 2, -10 * x ) * sin( ( x * 10 - 0.75 ) * c4 ) + 1;\n");
      out.write("\t},\n");
      out.write("\teaseInOutElastic: function (x) {\n");
      out.write("\t\treturn x === 0 ? 0 : x === 1 ? 1 : x < 0.5 ?\n");
      out.write("\t\t\t-( pow( 2, 20 * x - 10 ) * sin( ( 20 * x - 11.125 ) * c5 )) / 2 :\n");
      out.write("\t\t\tpow( 2, -20 * x + 10 ) * sin( ( 20 * x - 11.125 ) * c5 ) / 2 + 1;\n");
      out.write("\t},\n");
      out.write("\teaseInBack: function (x) {\n");
      out.write("\t\treturn c3 * x * x * x - c1 * x * x;\n");
      out.write("\t},\n");
      out.write("\teaseOutBack: function (x) {\n");
      out.write("\t\treturn 1 + c3 * pow( x - 1, 3 ) + c1 * pow( x - 1, 2 );\n");
      out.write("\t},\n");
      out.write("\teaseInOutBack: function (x) {\n");
      out.write("\t\treturn x < 0.5 ?\n");
      out.write("\t\t\t( pow( 2 * x, 2 ) * ( ( c2 + 1 ) * 2 * x - c2 ) ) / 2 :\n");
      out.write("\t\t\t( pow( 2 * x - 2, 2 ) *( ( c2 + 1 ) * ( x * 2 - 2 ) + c2 ) + 2 ) / 2;\n");
      out.write("\t},\n");
      out.write("\teaseInBounce: function (x) {\n");
      out.write("\t\treturn 1 - bounceOut( 1 - x );\n");
      out.write("\t},\n");
      out.write("\teaseOutBounce: bounceOut,\n");
      out.write("\teaseInOutBounce: function (x) {\n");
      out.write("\t\treturn x < 0.5 ?\n");
      out.write("\t\t\t( 1 - bounceOut( 1 - 2 * x ) ) / 2 :\n");
      out.write("\t\t\t( 1 + bounceOut( 2 * x - 1 ) ) / 2;\n");
      out.write("\t}\n");
      out.write("});\n");
      out.write("\n");
      out.write("});\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
